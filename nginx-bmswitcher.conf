server
{
    listen 80;
    listen 443 ssl;
    listen 443 quic;
    http2 on;
    server_name bmswitcher.com www.bmswitcher.com;
    index index.html index.htm;
    root /www/wwwroot/bmswitcher.com;
    
    #CERT-APPLY-CHECK--START
    # 用于SSL证书申请时的文件验证相关配置 -- 请勿删除
    include /www/server/panel/vhost/nginx/well-known/bmswitcher.com.conf;
    #CERT-APPLY-CHECK--END

    #SSL-START SSL相关配置，请勿删除或修改下一行带注释的404规则
    #error_page 404/404.html;
    #HTTP_TO_HTTPS_START
    set $isRedcert 1;
    if ($server_port != 443) {
        set $isRedcert 2;
    }
    if ( $uri ~ /\.well-known/ ) {
        set $isRedcert 1;
    }
    if ($isRedcert != 1) {
        rewrite ^(/.*)$ https://$host$1 permanent;
    }
    #HTTP_TO_HTTPS_END
    ssl_certificate    /www/server/panel/vhost/cert/bmswitcher.com/fullchain.pem;
    ssl_certificate_key    /www/server/panel/vhost/cert/bmswitcher.com/privkey.pem;
    ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_ciphers EECDH+CHACHA20:EECDH+CHACHA20-draft:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_tickets on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    add_header Strict-Transport-Security "max-age=31536000";
    add_header Alt-Svc 'quic=":443"; h3=":443"; h3-29=":443"; h3-27=":443";h3-25=":443"; h3-T050=":443"; h3-Q050=":443";h3-Q049=":443";h3-Q048=":443"; h3-Q046=":443"; h3-Q043=":443"';
    error_page 497  https://$host$request_uri;
    #SSL-END

    # Gzip 压缩配置
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript application/atom+xml image/svg+xml;

    #ERROR-PAGE-START  错误页配置，可以注释、删除或修改
    error_page 404 /404.html;
    #error_page 502 /502.html;
    #ERROR-PAGE-END

    #REWRITE-START URL重写规则引用,修改后将导致面板设置的伪静态规则失效
    include /www/server/panel/vhost/rewrite/bmswitcher.com.conf;
    #REWRITE-END

    #禁止访问的文件或目录
    location ~ ^/(\.user.ini|\.htaccess|\.git|\.env|\.svn|\.project|LICENSE|README.md|node_modules|package\.json|package-lock\.json|pnpm-lock\.yaml|ecosystem\.config\.js)
    {
        return 404;
    }

    #一键申请SSL证书验证目录相关设置
    location ~ \.well-known{
        allow all;
    }

    #禁止在证书验证目录放入敏感文件
    if ( $uri ~ "^/\.well-known/.*\.(php|jsp|py|js|css|lua|ts|go|zip|tar\.gz|rar|7z|sql|bak)$" ) {
        return 403;
    }

    # Next.js 静态文件优化 - _next/static 文件（构建后的静态资源）
    location /_next/static/ {
        alias /www/wwwroot/bmswitcher.com/.next/static/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary Accept-Encoding;
        access_log off;
        error_log off;
        
        # 如果文件不存在，则代理到 Next.js 服务器
        try_files $uri @nextjs;
    }

    # Next.js public 目录的静态文件
    location /favicon.ico {
        alias /www/wwwroot/bmswitcher.com/public/favicon.ico;
        expires 1M;
        add_header Cache-Control "public";
        access_log off;
        error_log off;
    }

    # 其他 public 目录文件
    location ~* ^/(.*\.(png|jpg|jpeg|gif|svg|ico|webp|woff|woff2|ttf|eot))$ {
        root /www/wwwroot/bmswitcher.com/public;
        expires 1M;
        add_header Cache-Control "public";
        access_log off;
        error_log off;
        
        # 如果文件不存在，则代理到 Next.js 服务器
        try_files /$1 @nextjs;
    }

    # 图片文件缓存（保留原有配置，但优先级较低）
    location ~ .*\.(gif|jpg|jpeg|png|bmp|swf|webp|svg)$
    {
        expires 30d;
        access_log off;
        error_log off;
        #Monitor-Config-Start 网站监控报表日志发送配置
        access_log syslog:server=unix:/tmp/bt-monitor.sock,nohostname,tag=4__access monitor;
        error_log syslog:server=unix:/tmp/bt-monitor.sock,nohostname,tag=4__error;
        #Monitor-Config-End
        
        # 如果静态文件不存在，则代理到 Next.js 服务器
        try_files $uri @nextjs;
    }

    # CSS 和 JS 文件缓存
    location ~ .*\.(js|css|map)$
    {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
        error_log off;
        #Monitor-Config-Start 网站监控报表日志发送配置
        access_log syslog:server=unix:/tmp/bt-monitor.sock,nohostname,tag=4__access monitor;
        error_log syslog:server=unix:/tmp/bt-monitor.sock,nohostname,tag=4__error;
        #Monitor-Config-End
        
        # 如果静态文件不存在，则代理到 Next.js 服务器
        try_files $uri @nextjs;
    }

    # 字体文件缓存
    location ~ .*\.(woff|woff2|ttf|eot|otf)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Access-Control-Allow-Origin "*";
        access_log off;
        error_log off;
        
        try_files $uri @nextjs;
    }

    # Next.js 应用反向代理（命名位置）
    location @nextjs {
        proxy_pass http://127.0.0.1:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 86400;
        proxy_connect_timeout 30;
        proxy_send_timeout 30;
        
        # 添加 CORS 头（如果需要）
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
    }

    # 主要的应用路由 - 所有其他请求都代理到 Next.js
    location / {
        # 首先尝试静态文件，然后代理到 Next.js
        try_files $uri $uri/ @nextjs;
    }

    # API 路由直接代理（Next.js API routes）
    location /api/ {
        proxy_pass http://127.0.0.1:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 86400;
    }

    # Next.js 内置路由直接代理
    location /_next/ {
        proxy_pass http://127.0.0.1:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # 访问日志和错误日志
    access_log  /www/wwwlogs/bmswitcher.com.log;
    error_log  /www/wwwlogs/bmswitcher.com.error.log;

    #Monitor-Config-Start 网站监控报表日志发送配置
    access_log syslog:server=unix:/tmp/bt-monitor.sock,nohostname,tag=4__access monitor;
    error_log syslog:server=unix:/tmp/bt-monitor.sock,nohostname,tag=4__error;
    #Monitor-Config-End
}
